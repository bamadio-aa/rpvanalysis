#!/usr/bin/env python
from rpvanalysis import rpvanalysis
import json
import sys

if len(sys.argv) < 2:
    print('Must specify configuration file.')
    sys.exit(1)
print(sys.argv[1])

with open(sys.argv[1]) as f:
    config = json.load(f)

a = rpvanalysis.analyzer()

a.date=config['date']
a.job_name=config['job_name']
a.hist_path = config['hist_path']
a.make_plot_dir()
a.read_sig_from_csv(config['sig_file'])
a.drop_2jet_events()
a.drop_3jet_events()
a.compute_temp_bins()
a.read_templates(config['templates_file'])
a.verify_templates()

if not 'template_type' in config:
    config['template_type'] = 0
else:
    a.template_type = config['template_type']

if 'n_toys' in config:
    a.compute_dressed_masses(config['n_toys'])
else:
    a.compute_dressed_masses(100)

a.compute_dressed_MJ_nom()
a.make_dressed_MJ_df()
a.read_scale_factors(config['scale_factor_file'])
dsid_list = sorted(a.sig_df.mcChannelNumber.unique())
for mj_cut in [0.6,0.65,0.7,0.75,0.8,0.85,0.9]:
    a.MJ_cut = mj_cut
    for region_str in ['5jSRb1','5jSRb9','4jSRb1','4jSRb9','4jSRb1LJG400','4jSRb9LJG400']:
        for dsid in dsid_list:
            a.get_signal_pred(region_str,dsid)
